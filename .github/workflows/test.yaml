name: Test

on:
  push:
    branches: [main]
    paths:
      - src/**
      - tests/**
      - pyproject.toml
      - tox.ini
      - uv.lock
      - .github/workflows/test.yaml
      - .github/workflows/constraints.txt
  pull_request:
    branches: [main]
    paths:
      - src/**
      - tests/**
      - pyproject.toml
      - tox.ini
      - uv.lock
      - .github/workflows/test.yaml
      - .github/workflows/constraints.txt
  workflow_dispatch: {}
  schedule:
    # Run every 27 hours to avoid running at the same time every day
    - cron: "40 12 * * 1-5"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}

env:
  FORCE_COLOR: 1
  UV_VERSION: ~=0.5.27

jobs:
  typing:
    name: Typing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        id: setup-python
      - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
        with:
          version: ${{ env.UV_VERSION }}
      - run: >
          uvx --with-requirements=${{ github.workspace }}/.github/workflows/constraints.txt
          tox -e typing
        env:
          UV_PYTHON: ${{ steps.setup-python.outputs.python-version }}

  test:
    name: Pytest (Python ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.python-version == '3.13' }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        include:
          - python-version: "3.13"
            os: "windows-latest"

          - python-version: "3.13"
            os: "macos-latest"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
        with:
          version: ${{ env.UV_VERSION }}
      - run: >
          uvx --with-requirements=${{ github.workspace }}/.github/workflows/constraints.txt
          tox -e ${{ matrix.python-version }}
        env:
          UV_PRERELEASE: "allow"
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          include-hidden-files: true
          name: coverage-data-${{ matrix.os }}-py${{ matrix.python-version }}
          path: ".coverage.*"

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: coverage-data-*
          merge-multiple: true
      - uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287 # v5.3.0
        with:
          version: ${{ env.UV_VERSION }}
      - name: Combine coverage data and generate report
        run: >
          uvx --with-requirements=${{ github.workspace }}/.github/workflows/constraints.txt
          tox -e coverage
      - uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
